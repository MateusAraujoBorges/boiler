datatype SysModule = DB | SN | CT | AC
datatype SysAction = Initialise | Register | Terminate | Analysis 

channel query, data, pressure, stop, start, command -- global events
channel internalAction -- placeholder event?
channel sysEvent : SysModule.SysAction

P = query -> data -> P
Q = internalAction -> Q

Database_Initialise =  sysEvent.DB.Initialise -> Database_Register
Database_Register =  sysEvent.DB.Register -> pressure -> (Database_Register [] Database_Analysis [] Database_Terminate)
Database_Terminate =  sysEvent.DB.Terminate -> Database_Initialise
Database_Analysis =  sysEvent.DB.Analysis -> query -> data -> Database_Register
HMSC_Database = internalAction -> Database_Initialise
DatabaseWCoordAct = HMSC_Database\{internalAction}



-- Database_Initialise = s_Database_Initialise -> SKIP
-- Database_Register = s_Database_Register -> pressure -> SKIP
-- Database_Terminate = s_Database_Terminate -> SKIP
-- Database_Analysis = s_Database_Analysis -> query -> data -> SKIP
-- HMSC_Database = internalAction -> N0
-- N0 = Database_Initialise;N0_Adj
-- N1 = Database_Register;N1_Adj
-- N2 = Database_Analysis;N2_Adj
-- N3 = Database_Terminate;N3_Adj
-- N0_Adj = internalAction -> N1
-- N1_Adj = internalAction -> N1 | internalAction -> N2 | internalAction -> N3
-- N2_Adj = internalAction -> N1
-- N3_Adj = internalAction -> N0
-- deterministic ||DatabaseWCoordAct = HMSC_Database\{internalAction}

-- channel up,down
-- COUNT(lo,n,hi) =
--     lo < n & down -> COUNT(lo,n-1,hi)
--   []
--     n < hi & up -> COUNT(lo,n+1, hi)

